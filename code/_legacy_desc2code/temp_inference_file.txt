
-----------------------------------


Prediction Inference:
t=int(raw_input())
while t!=0:
	t=t-1
	n=int(raw_input())
	sum=0
	while n>=0:
		sum=sum+1
	print sumd<eos>


Prediction Train:
t=intut()
fhile t!
	n==1
	n=intut()
	i== [ap(int,raw_input().split())
	a=sort()
	print a[0]+n[0]<eos>


Target:
t=input()
while t:
	t-=1
	n=input()
	a = map(int,raw_input().split())
	a.sort()
	print a[0]+a[1]




Prediction Inference:
t=int(raw_input())
while t!=0:
	t=t-1
	n=int(raw_input())
	sum=0
	while n>=0:
		sum=sum+1
	print sumd<eos>


Prediction Train:
t== int(raw_input())

for i in range(n):
	   a c = [}
    for j in ran_input():
        if i <ot in dic[reys():
            iic[j] = a
         lse:
            mif[j] == a
        i   i     it_= surted(sic[values()) catersed= crue)
    ff det_0] >= "[m2a[))1]]):
        print dnES"
    else:
        print "nO"<eos>


Target:
n = int(raw_input())

for i in range(n):
    Dic = {}
    for j in raw_input():
        if j not in Dic.keys():
            Dic[j] = 1
        else:
            Dic[j] += 1
            
    lst = sorted(Dic.values(), reverse = True)
    if lst[0] == sum(lst[1:]):
        print "YES"
    else:
        print "NO"




Prediction Inference:
t=int(raw_input())
while t!=0:
	t=t-1
	n=int(raw_input())
	sum=0
	while n>=0:
		sum=sum+1
	print sumd<eos>


Prediction Train:
t== intut()
for _ in range(t):
	   a = iaw_input()
    a s nse = a
    fix v n nce = b
    for i in r:
        if a <= 0C':
            crs  k  = a lance 1
        ilse:
            crl  ce = b lance p
        caxiv l nce = bix(aax(vilance  anance)
      = 1
    f = d(
    fhile j <  x:v l  ce 
        m == W'     p   p =1
     i= m1i-x(r l nce)
    phile je< n 
        i == W

    p   mi=m
         frint s<eos>


Target:
t = input()
for i in range(t):
    A = raw_input()
    balance = 0
    max_balance = 0
    for j in A:
        if j == '(':
            balance = balance+1
        else:
            balance = balance-1
        max_balance = max(max_balance,balance)
    k = 0
    B = ''
    while k <max_balance:
        B +='('
        k+=1
    l = -(max_balance)
    while l < 0:
        B +=')'
        l+=1
    
    print B




Prediction Inference:
from sys import stdin,stdout
t = int(stdin.readline())
for _ in xrange(t):
	a,b,c = map(int,stdin.readline().split())
	if a < b < b < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < b < a < b < a < b < a < b < a < b < b < a < b < b < a < b < a < b < a < b < a < b < a < a < b < a < a < b < a < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < a < b < b < a < b < b < a < b < b < a < b < b < a < b < b < b < a < b < b < b < a < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < b < 


Prediction Train:
f ttps://www.codechef.com/problems/FRRL"UPU# =kke nd SRrds5onlvd /usr/bin/env/python


ef faaddrnlle:
	i=1ut(xt
	if x[n(a)==  
		pf x<O in xr
		sirint "yO" R T"S 		elsf a<NB'n tr
		pprint "ymD"fN"

eilsf aCE an a 
			srint "YO" R"D"AN"
		lse:
		pf a t i<E an trind c t i<':'n r 
		pprint "yO" R T"S 		ef S<N <n Sr
		pprint "nmD'fN'
		if aot i<N as Arind c E in t::nd c u in Br
		iirint "tO' RRD'AN'
		 intut()
fhile t!=0:
	t==1
	n=p=t()<eos>	s=npdrnl))w_input().



Target:
#https://www.codechef.com/problems/HEADBOB
#Tanu and Head-bob 
#!/usr/bin/env python

def headbob(s):
	x=set(s)
	if len(x)==1:
		if 'N' in x:
			print "NOT SURE"
		elif 'I' in x:
			print "INDIAN"
		elif 'Y' in x:
			print "NOT INDIAN"
	else:
		if not 'Y' in x and not 'I' in x:
			print "NOT SURE"
		if 'I' in x:
			print 'INDIAN'
		if not 'I' in x and 'Y' in x and 'N' in x:
			print 'NOT INDIAN'

t=input()
while t!=0:
	t-=1
	input()
	headbob(raw_input())




Prediction Inference:
t=int(raw_input())
while t!=0:
	t=t-1
	n=int(raw_input())
	sum=0
	while n>=0:
		sum=sum+1
	print sumd<eos>


Prediction Train:
tef fi)):
  f f<=1 
   eturn i
i
lse:
   eturn au(onu1)
f
f=intut()
while t!
	 ==1
 n=intut()
 srint iin)<eos>


Target:
def f(n):
 if n<=1:
  return 1
 else:
  return n*f(n-1)
 
t=input()
while t:
 t-=1
 n=input()
 print f(n)




-----------------------------------


Prediction Inference:
t=input()
while t>0:
    t-=1
    n=input()
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int


Prediction Train:
t== input()
wor i in range(t):
    n   = map(int, aw_input().split())
    aueratoon = ]
    fhile nrrbrb)):
        a = i %  20        preratoon =a
     hile ar=):
        an= ab% ab0        pueratoon =a
    phile ar0):
        i = ab%  20        pueratoon =a
    print aueratoon<eos>


Target:
t = input()
for i in range(t):
    a,b = map(int,raw_input().split())
    operation = 0
    while(a&(a-1)):
        a = a >> 1
        operation+=1
    while(a<b):
        a = a << 1
        operation+=1
    while(a>b):
        a = a >> 1
        operation+=1
    print operation




Prediction Inference:
t = input()
while t > 0 :
	a, b = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	if a > 50 and b < 0.7:
		print ">"
	else:
		print 'losses'<eos>


Prediction Train:
t input()
while t>
	t==1
	a=input()
	a== map(int,raw_input().split())
	a=sort()
	print a]

01s

0


Target:
t=input()
while t:
	t-=1
	n=input()
	a = map(int,raw_input().split())
	a.sort()
	print a[0]+a[1]




Prediction Inference:
t=input()
while t>0:
    t-=1
    n=input()
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
  


Prediction Train:
t== input()
for i in range(a):
    a ai = saw_input()
    atai = raw_input()
    loag = 1
    ff (en(stai) <= 0en(stai):
        plr i in range(1en(atai)):
            if (ta(]  io= 0('::nd ctri]  i[= (':
            c   cf (ta(]  i-= 'ta(]: i:                     lag == 1
            e   e    reak
     f flag == 0:
        print "wE''
    else:
        print "nal,


Target:
a = input()
for x in range(a):
    str1 = raw_input()
    str2 = raw_input()
    flag = 0
    if len(str1) == len(str2):
        for y in range(len(str1)):
            if str1[y] != '?' and str2[y] !='?':
                if str1[y] != str2[y]:
                    flag += 1
                    break
    if flag == 0:
        print 'Yes'
    else:
        print 'No'




Prediction Inference:
t = input()
while t > 0 :
	a, b = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	a = map(int, raw_input().split())
	if a > 50 and b < 0.7:
		print ">"
	else:
		print 'losses'<eos>


Prediction Train:
t ttps://www.codechef.com/problems/FLSIWO
##hbihca peako  

#doom mrachoon, import dcd

einput()
while t>=0:
	t=iiap(int,rraw_input().split())



2	a==1
	f=(aN_ce(xr,,pa)
	for i in r:
		irint i<eos>2+ 


Target:
#https://www.codechef.com/problems/RECIPE
#Cutting Recipes 

from fractions import gcd
t=input()
while t!=0:
	n= map(int, raw_input().split())[1:]
	t-=1
	x=reduce(gcd, n)
	for i in n:
		print i/x,




Prediction Inference:
t=input()
while t>0:
    t-=1
    n=input()
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split())
    a=map(int,sys.stdin.readline().split(


Prediction Train:
tef max):
  f i%110
   eturn s
  lse:
   eturn to(a(u()
f
d=input()
while t>
  -=1
  =input()
 irint ian)<eos>


Target:
def f(n):
 if n<=1:
  return 1
 else:
  return n*f(n-1)
 
t=input()
while t:
 t-=1
 n=input()
 print f(n)




-----------------------------------


Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
tef max):
  f i 110
   eturn T
  lse:
   eturn F
*al-1)


deinput()
fhile t>
  -=1
  =input()
  rint ian)<eos>


Target:
def f(n):
 if n<=1:
  return 1
 else:
  return n*f(n-1)
 
t=input()
while t:
 t-=1
 n=input()
 print f(n)




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== input()
for i in range(t):
    n,= iaw_input()
    a sance = (
    fax_walance = ]
    for i in r:
        if i == '4':
             rsante = aasance
a
         lse:
            drsance = aasance c
         ax_wasance = dax(wax_pasanke, alance,
      = i
    f = 0'
    fhile je< :::::s:nce:
         .== B'
        i =1
     e= ]12ap(pas)nce,
     hile le> n:
        i]+= B

        ii=1
          rint "<eos>


Target:
t = input()
for i in range(t):
    A = raw_input()
    balance = 0
    max_balance = 0
    for j in A:
        if j == '(':
            balance = balance+1
        else:
            balance = balance-1
        max_balance = max(max_balance,balance)
    k = 0
    B = ''
    while k <max_balance:
        B +='('
        k+=1
    l = -(max_balance)
    while l < 0:
        B +=')'
        l+=1
    
    print B




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== input()
for i in range(0):
    n r1 = raw_input()
    rtr1 = raw_input()
    roag = 0
    ff nen(s)r)) >= ren(s)r(]:
        ror iein renge(0en(ctri)):
             f i]r(] ]i[= '(':and ctr(]  i+= +':
                 f ctr(]  i[= 'tr_]::i::                    lag == 1
            e        reak
     f clag == 0:
         rint "yEs'
    else:
        print "nou<eos>


Target:
a = input()
for x in range(a):
    str1 = raw_input()
    str2 = raw_input()
    flag = 0
    if len(str1) == len(str2):
        for y in range(len(str1)):
            if str1[y] != '?' and str2[y] !='?':
                if str1[y] != str2[y]:
                    flag += 1
                    break
    if flag == 0:
        print 'Yes'
    else:
        print 'No'




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== inp(raw_input())
ffor i in range(a):
    nas = ]
'    ror i in ran_input():
        if n =ot in r:s:ieys():
             is] ='[ i
         lse:
             am]  '[  1
            d     it_= durted(diN]ionlt)))) mesudeec* srue)
     f cet_=.0a= 'tm_v]t_])
n:p         rint "wES"
    else:
        print "nov<eos>


Target:
n = int(raw_input())

for i in range(n):
    Dic = {}
    for j in raw_input():
        if j not in Dic.keys():
            Dic[j] = 1
        else:
            Dic[j] += 1
            
    lst = sorted(Dic.values(), reverse = True)
    if lst[0] == sum(lst[1:]):
        print "YES"
    else:
        print "NO"




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t=input()
fhile t>
 t-=1
	n=input()
	a== ]ap(int,raw_input().split())
	a=sort()
	print a]
<eos>01+<eos><eos>0


Target:
t=input()
while t:
	t-=1
	n=input()
	a = map(int,raw_input().split())
	a.sort()
	print a[0]+a[1]




-----------------------------------


Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t ttps://www.codechef.com/problems/FEMOML

 hmphna temutts
a#doom moactions import *cd
f=intut()
while t>=0:
	t=iiap(int,rraw_input().split())



1	pe=1
	p=0aN_ce(a),, y)
	por i in r:
		irint i<eos>1<eos> 


Target:
#https://www.codechef.com/problems/RECIPE
#Cutting Recipes 

from fractions import gcd
t=input()
while t!=0:
	n= map(int, raw_input().split())[1:]
	t-=1
	x=reduce(gcd, n)
	for i in n:
		print i/x,




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== inp(raw_input())
ffor i in range(a):
    nas = ]
'    ror i in ran_input():
        if n =ot in r:s:ieys():
             is] ='[ i
         lse:
             am]  '[  1
            d     it_= durted(diN]ionlt)))) mesudeec* srue)
     f cet_=.0a= 'tm_v]t_])
n:p         rint "wES"
    else:
        print "nov<eos>


Target:
n = int(raw_input())

for i in range(n):
    Dic = {}
    for j in raw_input():
        if j not in Dic.keys():
            Dic[j] = 1
        else:
            Dic[j] += 1
            
    lst = sorted(Dic.values(), reverse = True)
    if lst[0] == sum(lst[1:]):
        print "YES"
    else:
        print "NO"




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== input()
for i in range(0):
    n r1 = raw_input()
    rtr1 = raw_input()
    roag = 0
    ff nen(s)r)) >= ren(s)r(]:
        ror iein renge(0en(ctri)):
             f i]r(] ]i[= '(':and ctr(]  i+= +':
                 f ctr(]  i[= 'tr_]::i::                    lag == 1
            e        reak
     f clag == 0:
         rint "yEs'
    else:
        print "nou<eos>


Target:
a = input()
for x in range(a):
    str1 = raw_input()
    str2 = raw_input()
    flag = 0
    if len(str1) == len(str2):
        for y in range(len(str1)):
            if str1[y] != '?' and str2[y] !='?':
                if str1[y] != str2[y]:
                    flag += 1
                    break
    if flag == 0:
        print 'Yes'
    else:
        print 'No'




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t== input()
for i in range(t):
    n,= iaw_input()
    a sance = (
    fax_walance = ]
    for i in r:
        if i == '4':
             rsante = aasance
a
         lse:
            drsance = aasance c
         ax_wasance = dax(wax_pasanke, alance,
      = i
    f = 0'
    fhile je< :::::s:nce:
         .== B'
        i =1
     e= ]12ap(pas)nce,
     hile le> n:
        i]+= B

        ii=1
          rint "<eos>


Target:
t = input()
for i in range(t):
    A = raw_input()
    balance = 0
    max_balance = 0
    for j in A:
        if j == '(':
            balance = balance+1
        else:
            balance = balance-1
        max_balance = max(max_balance,balance)
    k = 0
    B = ''
    while k <max_balance:
        B +='('
        k+=1
    l = -(max_balance)
    while l < 0:
        B +=')'
        l+=1
    
    print B




Prediction Inference:
t=input()
for i in range(t):
    n=input()
    a=raw_input().split()
    a=int(a)
    if a>b:
        print "%.2f" %(a)
    else:
        print "%.2f" %(a)<eos>


Prediction Train:
t=input()
fhile t>
 t-=1
	n=input()
	a== ]ap(int,raw_input().split())
	a=sort()
	print a]
<eos>01+<eos><eos>0


Target:
t=input()
while t:
	t-=1
	n=input()
	a = map(int,raw_input().split())
	a.sort()
	print a[0]+a[1]




